version: '3.7'

services:
  mqtttodb:
    build: ./iot
    container_name: mqtttodb
    restart: always
    volumes:
      - ./iot:/iot
    command: python manage.py fill_states
    env_file:
      - ./.env
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:2.0.14
    
    restart: always
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1883:1883
    user: '1000:1000'
    environment:
      - MQTT_BROKER_URL=mqtt://mosquitto
  postgres:
    container_name: postgres
    image: postgres
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/etc/postgresql:/etc/postgresql
      - ./postgres/var/log/postgresql:/var/log/postgresql
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_DB=hass"
    #network_mode: host
    restart: always
    ports:
      - 5352:5432
    volumes: 
      - ./postgres/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    #networks:
      #- backend
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:5.5
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: pavel@admin.com
      PGADMIN_DEFAULT_PASSWORD: pavel87654321
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    depends_on: 
      - postgres

  node-red:
    image: nodered/node-red:latest
    environment:
      - TZ=Europe/Moscow
    ports:
      - "1880:1880"
    networks:
      - node-red-net
    volumes:
      - node-red-data:/data
    depends_on:
      - postgres
    restart: always

volumes:
  node-red-data:

networks:
  node-red-net:
